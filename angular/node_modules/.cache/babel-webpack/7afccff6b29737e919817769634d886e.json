{"ast":null,"code":"import _assertThisInitialized from \"C:/Users/Nigem/Desktop/source/abp3/angular/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/Users/Nigem/Desktop/source/abp3/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/Nigem/Desktop/source/abp3/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"C:/Users/Nigem/Desktop/source/abp3/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/Nigem/Desktop/source/abp3/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Subscriber } from '../Subscriber';\nexport function sequenceEqual(compareTo, comparator) {\n  return function (source) {\n    return source.lift(new SequenceEqualOperator(compareTo, comparator));\n  };\n}\nexport var SequenceEqualOperator = /*#__PURE__*/function () {\n  function SequenceEqualOperator(compareTo, comparator) {\n    _classCallCheck(this, SequenceEqualOperator);\n\n    this.compareTo = compareTo;\n    this.comparator = comparator;\n  }\n\n  _createClass(SequenceEqualOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparator));\n    }\n  }]);\n\n  return SequenceEqualOperator;\n}();\nexport var SequenceEqualSubscriber = /*#__PURE__*/function (_Subscriber) {\n  _inherits(SequenceEqualSubscriber, _Subscriber);\n\n  var _super = _createSuper(SequenceEqualSubscriber);\n\n  function SequenceEqualSubscriber(destination, compareTo, comparator) {\n    var _this;\n\n    _classCallCheck(this, SequenceEqualSubscriber);\n\n    _this = _super.call(this, destination);\n    _this.compareTo = compareTo;\n    _this.comparator = comparator;\n    _this._a = [];\n    _this._b = [];\n    _this._oneComplete = false;\n\n    _this.destination.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, _assertThisInitialized(_this))));\n\n    return _this;\n  }\n\n  _createClass(SequenceEqualSubscriber, [{\n    key: \"_next\",\n    value: function _next(value) {\n      if (this._oneComplete && this._b.length === 0) {\n        this.emit(false);\n      } else {\n        this._a.push(value);\n\n        this.checkValues();\n      }\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      if (this._oneComplete) {\n        this.emit(this._a.length === 0 && this._b.length === 0);\n      } else {\n        this._oneComplete = true;\n      }\n\n      this.unsubscribe();\n    }\n  }, {\n    key: \"checkValues\",\n    value: function checkValues() {\n      var _a = this._a,\n          _b = this._b,\n          comparator = this.comparator;\n\n      while (_a.length > 0 && _b.length > 0) {\n        var a = _a.shift();\n\n        var b = _b.shift();\n\n        var areEqual = false;\n\n        try {\n          areEqual = comparator ? comparator(a, b) : a === b;\n        } catch (e) {\n          this.destination.error(e);\n        }\n\n        if (!areEqual) {\n          this.emit(false);\n        }\n      }\n    }\n  }, {\n    key: \"emit\",\n    value: function emit(value) {\n      var destination = this.destination;\n      destination.next(value);\n      destination.complete();\n    }\n  }, {\n    key: \"nextB\",\n    value: function nextB(value) {\n      if (this._oneComplete && this._a.length === 0) {\n        this.emit(false);\n      } else {\n        this._b.push(value);\n\n        this.checkValues();\n      }\n    }\n  }, {\n    key: \"completeB\",\n    value: function completeB() {\n      if (this._oneComplete) {\n        this.emit(this._a.length === 0 && this._b.length === 0);\n      } else {\n        this._oneComplete = true;\n      }\n    }\n  }]);\n\n  return SequenceEqualSubscriber;\n}(Subscriber);\n\nvar SequenceEqualCompareToSubscriber = /*#__PURE__*/function (_Subscriber2) {\n  _inherits(SequenceEqualCompareToSubscriber, _Subscriber2);\n\n  var _super2 = _createSuper(SequenceEqualCompareToSubscriber);\n\n  function SequenceEqualCompareToSubscriber(destination, parent) {\n    var _this2;\n\n    _classCallCheck(this, SequenceEqualCompareToSubscriber);\n\n    _this2 = _super2.call(this, destination);\n    _this2.parent = parent;\n    return _this2;\n  }\n\n  _createClass(SequenceEqualCompareToSubscriber, [{\n    key: \"_next\",\n    value: function _next(value) {\n      this.parent.nextB(value);\n    }\n  }, {\n    key: \"_error\",\n    value: function _error(err) {\n      this.parent.error(err);\n      this.unsubscribe();\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      this.parent.completeB();\n      this.unsubscribe();\n    }\n  }]);\n\n  return SequenceEqualCompareToSubscriber;\n}(Subscriber); //# sourceMappingURL=sequenceEqual.js.map","map":{"version":3,"sources":["C:/Users/Nigem/Desktop/source/abp3/angular/node_modules/rxjs/_esm2015/internal/operators/sequenceEqual.js"],"names":["Subscriber","sequenceEqual","compareTo","comparator","source","lift","SequenceEqualOperator","subscriber","subscribe","SequenceEqualSubscriber","destination","_a","_b","_oneComplete","add","SequenceEqualCompareToSubscriber","value","length","emit","push","checkValues","unsubscribe","a","shift","b","areEqual","e","error","next","complete","parent","nextB","err","completeB"],"mappings":"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","sourcesContent":["import { Subscriber } from '../Subscriber';\r\nexport function sequenceEqual(compareTo, comparator) {\r\n    return (source) => source.lift(new SequenceEqualOperator(compareTo, comparator));\r\n}\r\nexport class SequenceEqualOperator {\r\n    constructor(compareTo, comparator) {\r\n        this.compareTo = compareTo;\r\n        this.comparator = comparator;\r\n    }\r\n    call(subscriber, source) {\r\n        return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparator));\r\n    }\r\n}\r\nexport class SequenceEqualSubscriber extends Subscriber {\r\n    constructor(destination, compareTo, comparator) {\r\n        super(destination);\r\n        this.compareTo = compareTo;\r\n        this.comparator = comparator;\r\n        this._a = [];\r\n        this._b = [];\r\n        this._oneComplete = false;\r\n        this.destination.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, this)));\r\n    }\r\n    _next(value) {\r\n        if (this._oneComplete && this._b.length === 0) {\r\n            this.emit(false);\r\n        }\r\n        else {\r\n            this._a.push(value);\r\n            this.checkValues();\r\n        }\r\n    }\r\n    _complete() {\r\n        if (this._oneComplete) {\r\n            this.emit(this._a.length === 0 && this._b.length === 0);\r\n        }\r\n        else {\r\n            this._oneComplete = true;\r\n        }\r\n        this.unsubscribe();\r\n    }\r\n    checkValues() {\r\n        const { _a, _b, comparator } = this;\r\n        while (_a.length > 0 && _b.length > 0) {\r\n            let a = _a.shift();\r\n            let b = _b.shift();\r\n            let areEqual = false;\r\n            try {\r\n                areEqual = comparator ? comparator(a, b) : a === b;\r\n            }\r\n            catch (e) {\r\n                this.destination.error(e);\r\n            }\r\n            if (!areEqual) {\r\n                this.emit(false);\r\n            }\r\n        }\r\n    }\r\n    emit(value) {\r\n        const { destination } = this;\r\n        destination.next(value);\r\n        destination.complete();\r\n    }\r\n    nextB(value) {\r\n        if (this._oneComplete && this._a.length === 0) {\r\n            this.emit(false);\r\n        }\r\n        else {\r\n            this._b.push(value);\r\n            this.checkValues();\r\n        }\r\n    }\r\n    completeB() {\r\n        if (this._oneComplete) {\r\n            this.emit(this._a.length === 0 && this._b.length === 0);\r\n        }\r\n        else {\r\n            this._oneComplete = true;\r\n        }\r\n    }\r\n}\r\nclass SequenceEqualCompareToSubscriber extends Subscriber {\r\n    constructor(destination, parent) {\r\n        super(destination);\r\n        this.parent = parent;\r\n    }\r\n    _next(value) {\r\n        this.parent.nextB(value);\r\n    }\r\n    _error(err) {\r\n        this.parent.error(err);\r\n        this.unsubscribe();\r\n    }\r\n    _complete() {\r\n        this.parent.completeB();\r\n        this.unsubscribe();\r\n    }\r\n}\r\n//# sourceMappingURL=sequenceEqual.js.map"]},"metadata":{},"sourceType":"module"}