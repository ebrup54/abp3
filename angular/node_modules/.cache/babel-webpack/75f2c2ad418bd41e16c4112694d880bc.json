{"ast":null,"code":"import _classCallCheck from \"C:/Users/Nigem/Desktop/source/abp3/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/Nigem/Desktop/source/abp3/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/Nigem/Desktop/source/abp3/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/Nigem/Desktop/source/abp3/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/Nigem/Desktop/source/abp3/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/Nigem/Desktop/source/abp3/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { AsyncAction } from './AsyncAction';\nexport var QueueAction = /*#__PURE__*/function (_AsyncAction) {\n  _inherits(QueueAction, _AsyncAction);\n\n  var _super = _createSuper(QueueAction);\n\n  function QueueAction(scheduler, work) {\n    var _this;\n\n    _classCallCheck(this, QueueAction);\n\n    _this = _super.call(this, scheduler, work);\n    _this.scheduler = scheduler;\n    _this.work = work;\n    return _this;\n  }\n\n  _createClass(QueueAction, [{\n    key: \"schedule\",\n    value: function schedule(state) {\n      var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (delay > 0) {\n        return _get(_getPrototypeOf(QueueAction.prototype), \"schedule\", this).call(this, state, delay);\n      }\n\n      this.delay = delay;\n      this.state = state;\n      this.scheduler.flush(this);\n      return this;\n    }\n  }, {\n    key: \"execute\",\n    value: function execute(state, delay) {\n      return delay > 0 || this.closed ? _get(_getPrototypeOf(QueueAction.prototype), \"execute\", this).call(this, state, delay) : this._execute(state, delay);\n    }\n  }, {\n    key: \"requestAsyncId\",\n    value: function requestAsyncId(scheduler, id) {\n      var delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n      if (delay !== null && delay > 0 || delay === null && this.delay > 0) {\n        return _get(_getPrototypeOf(QueueAction.prototype), \"requestAsyncId\", this).call(this, scheduler, id, delay);\n      }\n\n      return scheduler.flush(this);\n    }\n  }]);\n\n  return QueueAction;\n}(AsyncAction); //# sourceMappingURL=QueueAction.js.map","map":{"version":3,"sources":["C:/Users/Nigem/Desktop/source/abp3/angular/node_modules/rxjs/_esm2015/internal/scheduler/QueueAction.js"],"names":["AsyncAction","QueueAction","scheduler","work","state","delay","flush","closed","_execute","id"],"mappings":";;;;;;AAAA,SAASA,WAAT,QAA4B,eAA5B;AACA,WAAaC,WAAb;AAAA;;AAAA;;AACI,uBAAYC,SAAZ,EAAuBC,IAAvB,EAA6B;AAAA;;AAAA;;AACzB,8BAAMD,SAAN,EAAiBC,IAAjB;AACA,UAAKD,SAAL,GAAiBA,SAAjB;AACA,UAAKC,IAAL,GAAYA,IAAZ;AAHyB;AAI5B;;AALL;AAAA;AAAA,WAMI,kBAASC,KAAT,EAA2B;AAAA,UAAXC,KAAW,uEAAH,CAAG;;AACvB,UAAIA,KAAK,GAAG,CAAZ,EAAe;AACX,yFAAsBD,KAAtB,EAA6BC,KAA7B;AACH;;AACD,WAAKA,KAAL,GAAaA,KAAb;AACA,WAAKD,KAAL,GAAaA,KAAb;AACA,WAAKF,SAAL,CAAeI,KAAf,CAAqB,IAArB;AACA,aAAO,IAAP;AACH;AAdL;AAAA;AAAA,WAeI,iBAAQF,KAAR,EAAeC,KAAf,EAAsB;AAClB,aAAQA,KAAK,GAAG,CAAR,IAAa,KAAKE,MAAnB,4EACWH,KADX,EACkBC,KADlB,IAEH,KAAKG,QAAL,CAAcJ,KAAd,EAAqBC,KAArB,CAFJ;AAGH;AAnBL;AAAA;AAAA,WAoBI,wBAAeH,SAAf,EAA0BO,EAA1B,EAAyC;AAAA,UAAXJ,KAAW,uEAAH,CAAG;;AACrC,UAAKA,KAAK,KAAK,IAAV,IAAkBA,KAAK,GAAG,CAA3B,IAAkCA,KAAK,KAAK,IAAV,IAAkB,KAAKA,KAAL,GAAa,CAArE,EAAyE;AACrE,+FAA4BH,SAA5B,EAAuCO,EAAvC,EAA2CJ,KAA3C;AACH;;AACD,aAAOH,SAAS,CAACI,KAAV,CAAgB,IAAhB,CAAP;AACH;AAzBL;;AAAA;AAAA,EAAiCN,WAAjC,E,CA2BA","sourcesContent":["import { AsyncAction } from './AsyncAction';\r\nexport class QueueAction extends AsyncAction {\r\n    constructor(scheduler, work) {\r\n        super(scheduler, work);\r\n        this.scheduler = scheduler;\r\n        this.work = work;\r\n    }\r\n    schedule(state, delay = 0) {\r\n        if (delay > 0) {\r\n            return super.schedule(state, delay);\r\n        }\r\n        this.delay = delay;\r\n        this.state = state;\r\n        this.scheduler.flush(this);\r\n        return this;\r\n    }\r\n    execute(state, delay) {\r\n        return (delay > 0 || this.closed) ?\r\n            super.execute(state, delay) :\r\n            this._execute(state, delay);\r\n    }\r\n    requestAsyncId(scheduler, id, delay = 0) {\r\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\r\n            return super.requestAsyncId(scheduler, id, delay);\r\n        }\r\n        return scheduler.flush(this);\r\n    }\r\n}\r\n//# sourceMappingURL=QueueAction.js.map"]},"metadata":{},"sourceType":"module"}