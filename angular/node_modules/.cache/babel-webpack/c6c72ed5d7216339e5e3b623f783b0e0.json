{"ast":null,"code":"import _get from \"C:/Users/Nigem/Desktop/source/abp3/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/Nigem/Desktop/source/abp3/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _classCallCheck from \"C:/Users/Nigem/Desktop/source/abp3/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/Nigem/Desktop/source/abp3/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/Nigem/Desktop/source/abp3/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/Nigem/Desktop/source/abp3/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport var VirtualTimeScheduler = /*#__PURE__*/function (_AsyncScheduler) {\n  _inherits(VirtualTimeScheduler, _AsyncScheduler);\n\n  var _super = _createSuper(VirtualTimeScheduler);\n\n  function VirtualTimeScheduler() {\n    var _this;\n\n    var SchedulerAction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : VirtualAction;\n    var maxFrames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Number.POSITIVE_INFINITY;\n\n    _classCallCheck(this, VirtualTimeScheduler);\n\n    _this = _super.call(this, SchedulerAction, function () {\n      return _this.frame;\n    });\n    _this.maxFrames = maxFrames;\n    _this.frame = 0;\n    _this.index = -1;\n    return _this;\n  }\n\n  _createClass(VirtualTimeScheduler, [{\n    key: \"flush\",\n    value: function flush() {\n      var actions = this.actions,\n          maxFrames = this.maxFrames;\n      var error, action;\n\n      while ((action = actions[0]) && action.delay <= maxFrames) {\n        actions.shift();\n        this.frame = action.delay;\n\n        if (error = action.execute(action.state, action.delay)) {\n          break;\n        }\n      }\n\n      if (error) {\n        while (action = actions.shift()) {\n          action.unsubscribe();\n        }\n\n        throw error;\n      }\n    }\n  }]);\n\n  return VirtualTimeScheduler;\n}(AsyncScheduler);\nVirtualTimeScheduler.frameTimeFactor = 10;\nexport var VirtualAction = /*#__PURE__*/function (_AsyncAction) {\n  _inherits(VirtualAction, _AsyncAction);\n\n  var _super2 = _createSuper(VirtualAction);\n\n  function VirtualAction(scheduler, work) {\n    var _this2;\n\n    var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : scheduler.index += 1;\n\n    _classCallCheck(this, VirtualAction);\n\n    _this2 = _super2.call(this, scheduler, work);\n    _this2.scheduler = scheduler;\n    _this2.work = work;\n    _this2.index = index;\n    _this2.active = true;\n    _this2.index = scheduler.index = index;\n    return _this2;\n  }\n\n  _createClass(VirtualAction, [{\n    key: \"schedule\",\n    value: function schedule(state) {\n      var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (!this.id) {\n        return _get(_getPrototypeOf(VirtualAction.prototype), \"schedule\", this).call(this, state, delay);\n      }\n\n      this.active = false;\n      var action = new VirtualAction(this.scheduler, this.work);\n      this.add(action);\n      return action.schedule(state, delay);\n    }\n  }, {\n    key: \"requestAsyncId\",\n    value: function requestAsyncId(scheduler, id) {\n      var delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      this.delay = scheduler.frame + delay;\n      var actions = scheduler.actions;\n      actions.push(this);\n      actions.sort(VirtualAction.sortActions);\n      return true;\n    }\n  }, {\n    key: \"recycleAsyncId\",\n    value: function recycleAsyncId(scheduler, id) {\n      var delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      return undefined;\n    }\n  }, {\n    key: \"_execute\",\n    value: function _execute(state, delay) {\n      if (this.active === true) {\n        return _get(_getPrototypeOf(VirtualAction.prototype), \"_execute\", this).call(this, state, delay);\n      }\n    }\n  }], [{\n    key: \"sortActions\",\n    value: function sortActions(a, b) {\n      if (a.delay === b.delay) {\n        if (a.index === b.index) {\n          return 0;\n        } else if (a.index > b.index) {\n          return 1;\n        } else {\n          return -1;\n        }\n      } else if (a.delay > b.delay) {\n        return 1;\n      } else {\n        return -1;\n      }\n    }\n  }]);\n\n  return VirtualAction;\n}(AsyncAction); //# sourceMappingURL=VirtualTimeScheduler.js.map","map":{"version":3,"sources":["C:/Users/Nigem/Desktop/source/abp3/angular/node_modules/rxjs/_esm2015/internal/scheduler/VirtualTimeScheduler.js"],"names":["AsyncAction","AsyncScheduler","VirtualTimeScheduler","SchedulerAction","VirtualAction","maxFrames","Number","POSITIVE_INFINITY","frame","index","actions","error","action","delay","shift","execute","state","unsubscribe","frameTimeFactor","scheduler","work","active","id","add","schedule","push","sort","sortActions","undefined","a","b"],"mappings":"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","sourcesContent":["import { AsyncAction } from './AsyncAction';\r\nimport { AsyncScheduler } from './AsyncScheduler';\r\nexport class VirtualTimeScheduler extends AsyncScheduler {\r\n    constructor(SchedulerAction = VirtualAction, maxFrames = Number.POSITIVE_INFINITY) {\r\n        super(SchedulerAction, () => this.frame);\r\n        this.maxFrames = maxFrames;\r\n        this.frame = 0;\r\n        this.index = -1;\r\n    }\r\n    flush() {\r\n        const { actions, maxFrames } = this;\r\n        let error, action;\r\n        while ((action = actions[0]) && action.delay <= maxFrames) {\r\n            actions.shift();\r\n            this.frame = action.delay;\r\n            if (error = action.execute(action.state, action.delay)) {\r\n                break;\r\n            }\r\n        }\r\n        if (error) {\r\n            while (action = actions.shift()) {\r\n                action.unsubscribe();\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n}\r\nVirtualTimeScheduler.frameTimeFactor = 10;\r\nexport class VirtualAction extends AsyncAction {\r\n    constructor(scheduler, work, index = scheduler.index += 1) {\r\n        super(scheduler, work);\r\n        this.scheduler = scheduler;\r\n        this.work = work;\r\n        this.index = index;\r\n        this.active = true;\r\n        this.index = scheduler.index = index;\r\n    }\r\n    schedule(state, delay = 0) {\r\n        if (!this.id) {\r\n            return super.schedule(state, delay);\r\n        }\r\n        this.active = false;\r\n        const action = new VirtualAction(this.scheduler, this.work);\r\n        this.add(action);\r\n        return action.schedule(state, delay);\r\n    }\r\n    requestAsyncId(scheduler, id, delay = 0) {\r\n        this.delay = scheduler.frame + delay;\r\n        const { actions } = scheduler;\r\n        actions.push(this);\r\n        actions.sort(VirtualAction.sortActions);\r\n        return true;\r\n    }\r\n    recycleAsyncId(scheduler, id, delay = 0) {\r\n        return undefined;\r\n    }\r\n    _execute(state, delay) {\r\n        if (this.active === true) {\r\n            return super._execute(state, delay);\r\n        }\r\n    }\r\n    static sortActions(a, b) {\r\n        if (a.delay === b.delay) {\r\n            if (a.index === b.index) {\r\n                return 0;\r\n            }\r\n            else if (a.index > b.index) {\r\n                return 1;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (a.delay > b.delay) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return -1;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=VirtualTimeScheduler.js.map"]},"metadata":{},"sourceType":"module"}