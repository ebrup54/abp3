{"ast":null,"code":"import _classCallCheck from \"C:/Users/Nigem/Desktop/source/abp3/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/Nigem/Desktop/source/abp3/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/Nigem/Desktop/source/abp3/angular/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"C:/Users/Nigem/Desktop/source/abp3/angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/Nigem/Desktop/source/abp3/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/Nigem/Desktop/source/abp3/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/Nigem/Desktop/source/abp3/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nexport var Subscriber = /*#__PURE__*/function (_Subscription) {\n  _inherits(Subscriber, _Subscription);\n\n  var _super = _createSuper(Subscriber);\n\n  function Subscriber(destinationOrNext, error, complete) {\n    var _this;\n\n    _classCallCheck(this, Subscriber);\n\n    _this = _super.call(this);\n    _this.syncErrorValue = null;\n    _this.syncErrorThrown = false;\n    _this.syncErrorThrowable = false;\n    _this.isStopped = false;\n\n    switch (arguments.length) {\n      case 0:\n        _this.destination = emptyObserver;\n        break;\n\n      case 1:\n        if (!destinationOrNext) {\n          _this.destination = emptyObserver;\n          break;\n        }\n\n        if (typeof destinationOrNext === 'object') {\n          if (destinationOrNext instanceof Subscriber) {\n            _this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n            _this.destination = destinationOrNext;\n            destinationOrNext.add(_assertThisInitialized(_this));\n          } else {\n            _this.syncErrorThrowable = true;\n            _this.destination = new SafeSubscriber(_assertThisInitialized(_this), destinationOrNext);\n          }\n\n          break;\n        }\n\n      default:\n        _this.syncErrorThrowable = true;\n        _this.destination = new SafeSubscriber(_assertThisInitialized(_this), destinationOrNext, error, complete);\n        break;\n    }\n\n    return _this;\n  }\n\n  _createClass(Subscriber, [{\n    key: rxSubscriberSymbol,\n    value: function value() {\n      return this;\n    }\n  }, {\n    key: \"next\",\n    value: function next(value) {\n      if (!this.isStopped) {\n        this._next(value);\n      }\n    }\n  }, {\n    key: \"error\",\n    value: function error(err) {\n      if (!this.isStopped) {\n        this.isStopped = true;\n\n        this._error(err);\n      }\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      if (!this.isStopped) {\n        this.isStopped = true;\n\n        this._complete();\n      }\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      if (this.closed) {\n        return;\n      }\n\n      this.isStopped = true;\n\n      _get(_getPrototypeOf(Subscriber.prototype), \"unsubscribe\", this).call(this);\n    }\n  }, {\n    key: \"_next\",\n    value: function _next(value) {\n      this.destination.next(value);\n    }\n  }, {\n    key: \"_error\",\n    value: function _error(err) {\n      this.destination.error(err);\n      this.unsubscribe();\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      this.destination.complete();\n      this.unsubscribe();\n    }\n  }, {\n    key: \"_unsubscribeAndRecycle\",\n    value: function _unsubscribeAndRecycle() {\n      var _parentOrParents = this._parentOrParents;\n      this._parentOrParents = null;\n      this.unsubscribe();\n      this.closed = false;\n      this.isStopped = false;\n      this._parentOrParents = _parentOrParents;\n      return this;\n    }\n  }], [{\n    key: \"create\",\n    value: function create(next, error, complete) {\n      var subscriber = new Subscriber(next, error, complete);\n      subscriber.syncErrorThrowable = false;\n      return subscriber;\n    }\n  }]);\n\n  return Subscriber;\n}(Subscription);\nexport var SafeSubscriber = /*#__PURE__*/function (_Subscriber) {\n  _inherits(SafeSubscriber, _Subscriber);\n\n  var _super2 = _createSuper(SafeSubscriber);\n\n  function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n    var _this2;\n\n    _classCallCheck(this, SafeSubscriber);\n\n    _this2 = _super2.call(this);\n    _this2._parentSubscriber = _parentSubscriber;\n    var next;\n\n    var context = _assertThisInitialized(_this2);\n\n    if (isFunction(observerOrNext)) {\n      next = observerOrNext;\n    } else if (observerOrNext) {\n      next = observerOrNext.next;\n      error = observerOrNext.error;\n      complete = observerOrNext.complete;\n\n      if (observerOrNext !== emptyObserver) {\n        context = Object.create(observerOrNext);\n\n        if (isFunction(context.unsubscribe)) {\n          _this2.add(context.unsubscribe.bind(context));\n        }\n\n        context.unsubscribe = _this2.unsubscribe.bind(_assertThisInitialized(_this2));\n      }\n    }\n\n    _this2._context = context;\n    _this2._next = next;\n    _this2._error = error;\n    _this2._complete = complete;\n    return _this2;\n  }\n\n  _createClass(SafeSubscriber, [{\n    key: \"next\",\n    value: function next(value) {\n      if (!this.isStopped && this._next) {\n        var _parentSubscriber = this._parentSubscriber;\n\n        if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._next, value);\n        } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n          this.unsubscribe();\n        }\n      }\n    }\n  }, {\n    key: \"error\",\n    value: function error(err) {\n      if (!this.isStopped) {\n        var _parentSubscriber = this._parentSubscriber;\n        var useDeprecatedSynchronousErrorHandling = config.useDeprecatedSynchronousErrorHandling;\n\n        if (this._error) {\n          if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n            this.__tryOrUnsub(this._error, err);\n\n            this.unsubscribe();\n          } else {\n            this.__tryOrSetError(_parentSubscriber, this._error, err);\n\n            this.unsubscribe();\n          }\n        } else if (!_parentSubscriber.syncErrorThrowable) {\n          this.unsubscribe();\n\n          if (useDeprecatedSynchronousErrorHandling) {\n            throw err;\n          }\n\n          hostReportError(err);\n        } else {\n          if (useDeprecatedSynchronousErrorHandling) {\n            _parentSubscriber.syncErrorValue = err;\n            _parentSubscriber.syncErrorThrown = true;\n          } else {\n            hostReportError(err);\n          }\n\n          this.unsubscribe();\n        }\n      }\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      var _this3 = this;\n\n      if (!this.isStopped) {\n        var _parentSubscriber = this._parentSubscriber;\n\n        if (this._complete) {\n          var wrappedComplete = function wrappedComplete() {\n            return _this3._complete.call(_this3._context);\n          };\n\n          if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n            this.__tryOrUnsub(wrappedComplete);\n\n            this.unsubscribe();\n          } else {\n            this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n\n            this.unsubscribe();\n          }\n        } else {\n          this.unsubscribe();\n        }\n      }\n    }\n  }, {\n    key: \"__tryOrUnsub\",\n    value: function __tryOrUnsub(fn, value) {\n      try {\n        fn.call(this._context, value);\n      } catch (err) {\n        this.unsubscribe();\n\n        if (config.useDeprecatedSynchronousErrorHandling) {\n          throw err;\n        } else {\n          hostReportError(err);\n        }\n      }\n    }\n  }, {\n    key: \"__tryOrSetError\",\n    value: function __tryOrSetError(parent, fn, value) {\n      if (!config.useDeprecatedSynchronousErrorHandling) {\n        throw new Error('bad call');\n      }\n\n      try {\n        fn.call(this._context, value);\n      } catch (err) {\n        if (config.useDeprecatedSynchronousErrorHandling) {\n          parent.syncErrorValue = err;\n          parent.syncErrorThrown = true;\n          return true;\n        } else {\n          hostReportError(err);\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"_unsubscribe\",\n    value: function _unsubscribe() {\n      var _parentSubscriber = this._parentSubscriber;\n      this._context = null;\n      this._parentSubscriber = null;\n\n      _parentSubscriber.unsubscribe();\n    }\n  }]);\n\n  return SafeSubscriber;\n}(Subscriber); //# sourceMappingURL=Subscriber.js.map","map":{"version":3,"sources":["C:/Users/Nigem/Desktop/source/abp3/angular/node_modules/rxjs/_esm2015/internal/Subscriber.js"],"names":["isFunction","empty","emptyObserver","Subscription","rxSubscriber","rxSubscriberSymbol","config","hostReportError","Subscriber","destinationOrNext","error","complete","syncErrorValue","syncErrorThrown","syncErrorThrowable","isStopped","arguments","length","destination","add","SafeSubscriber","value","_next","err","_error","_complete","closed","next","unsubscribe","_parentOrParents","subscriber","_parentSubscriber","observerOrNext","context","Object","create","bind","_context","useDeprecatedSynchronousErrorHandling","__tryOrUnsub","__tryOrSetError","wrappedComplete","call","fn","parent","Error"],"mappings":"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","sourcesContent":["import { isFunction } from './util/isFunction';\r\nimport { empty as emptyObserver } from './Observer';\r\nimport { Subscription } from './Subscription';\r\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\r\nimport { config } from './config';\r\nimport { hostReportError } from './util/hostReportError';\r\nexport class Subscriber extends Subscription {\r\n    constructor(destinationOrNext, error, complete) {\r\n        super();\r\n        this.syncErrorValue = null;\r\n        this.syncErrorThrown = false;\r\n        this.syncErrorThrowable = false;\r\n        this.isStopped = false;\r\n        switch (arguments.length) {\r\n            case 0:\r\n                this.destination = emptyObserver;\r\n                break;\r\n            case 1:\r\n                if (!destinationOrNext) {\r\n                    this.destination = emptyObserver;\r\n                    break;\r\n                }\r\n                if (typeof destinationOrNext === 'object') {\r\n                    if (destinationOrNext instanceof Subscriber) {\r\n                        this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\r\n                        this.destination = destinationOrNext;\r\n                        destinationOrNext.add(this);\r\n                    }\r\n                    else {\r\n                        this.syncErrorThrowable = true;\r\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\r\n                    }\r\n                    break;\r\n                }\r\n            default:\r\n                this.syncErrorThrowable = true;\r\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\r\n                break;\r\n        }\r\n    }\r\n    [rxSubscriberSymbol]() { return this; }\r\n    static create(next, error, complete) {\r\n        const subscriber = new Subscriber(next, error, complete);\r\n        subscriber.syncErrorThrowable = false;\r\n        return subscriber;\r\n    }\r\n    next(value) {\r\n        if (!this.isStopped) {\r\n            this._next(value);\r\n        }\r\n    }\r\n    error(err) {\r\n        if (!this.isStopped) {\r\n            this.isStopped = true;\r\n            this._error(err);\r\n        }\r\n    }\r\n    complete() {\r\n        if (!this.isStopped) {\r\n            this.isStopped = true;\r\n            this._complete();\r\n        }\r\n    }\r\n    unsubscribe() {\r\n        if (this.closed) {\r\n            return;\r\n        }\r\n        this.isStopped = true;\r\n        super.unsubscribe();\r\n    }\r\n    _next(value) {\r\n        this.destination.next(value);\r\n    }\r\n    _error(err) {\r\n        this.destination.error(err);\r\n        this.unsubscribe();\r\n    }\r\n    _complete() {\r\n        this.destination.complete();\r\n        this.unsubscribe();\r\n    }\r\n    _unsubscribeAndRecycle() {\r\n        const { _parentOrParents } = this;\r\n        this._parentOrParents = null;\r\n        this.unsubscribe();\r\n        this.closed = false;\r\n        this.isStopped = false;\r\n        this._parentOrParents = _parentOrParents;\r\n        return this;\r\n    }\r\n}\r\nexport class SafeSubscriber extends Subscriber {\r\n    constructor(_parentSubscriber, observerOrNext, error, complete) {\r\n        super();\r\n        this._parentSubscriber = _parentSubscriber;\r\n        let next;\r\n        let context = this;\r\n        if (isFunction(observerOrNext)) {\r\n            next = observerOrNext;\r\n        }\r\n        else if (observerOrNext) {\r\n            next = observerOrNext.next;\r\n            error = observerOrNext.error;\r\n            complete = observerOrNext.complete;\r\n            if (observerOrNext !== emptyObserver) {\r\n                context = Object.create(observerOrNext);\r\n                if (isFunction(context.unsubscribe)) {\r\n                    this.add(context.unsubscribe.bind(context));\r\n                }\r\n                context.unsubscribe = this.unsubscribe.bind(this);\r\n            }\r\n        }\r\n        this._context = context;\r\n        this._next = next;\r\n        this._error = error;\r\n        this._complete = complete;\r\n    }\r\n    next(value) {\r\n        if (!this.isStopped && this._next) {\r\n            const { _parentSubscriber } = this;\r\n            if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\r\n                this.__tryOrUnsub(this._next, value);\r\n            }\r\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\r\n                this.unsubscribe();\r\n            }\r\n        }\r\n    }\r\n    error(err) {\r\n        if (!this.isStopped) {\r\n            const { _parentSubscriber } = this;\r\n            const { useDeprecatedSynchronousErrorHandling } = config;\r\n            if (this._error) {\r\n                if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\r\n                    this.__tryOrUnsub(this._error, err);\r\n                    this.unsubscribe();\r\n                }\r\n                else {\r\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\r\n                    this.unsubscribe();\r\n                }\r\n            }\r\n            else if (!_parentSubscriber.syncErrorThrowable) {\r\n                this.unsubscribe();\r\n                if (useDeprecatedSynchronousErrorHandling) {\r\n                    throw err;\r\n                }\r\n                hostReportError(err);\r\n            }\r\n            else {\r\n                if (useDeprecatedSynchronousErrorHandling) {\r\n                    _parentSubscriber.syncErrorValue = err;\r\n                    _parentSubscriber.syncErrorThrown = true;\r\n                }\r\n                else {\r\n                    hostReportError(err);\r\n                }\r\n                this.unsubscribe();\r\n            }\r\n        }\r\n    }\r\n    complete() {\r\n        if (!this.isStopped) {\r\n            const { _parentSubscriber } = this;\r\n            if (this._complete) {\r\n                const wrappedComplete = () => this._complete.call(this._context);\r\n                if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\r\n                    this.__tryOrUnsub(wrappedComplete);\r\n                    this.unsubscribe();\r\n                }\r\n                else {\r\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\r\n                    this.unsubscribe();\r\n                }\r\n            }\r\n            else {\r\n                this.unsubscribe();\r\n            }\r\n        }\r\n    }\r\n    __tryOrUnsub(fn, value) {\r\n        try {\r\n            fn.call(this._context, value);\r\n        }\r\n        catch (err) {\r\n            this.unsubscribe();\r\n            if (config.useDeprecatedSynchronousErrorHandling) {\r\n                throw err;\r\n            }\r\n            else {\r\n                hostReportError(err);\r\n            }\r\n        }\r\n    }\r\n    __tryOrSetError(parent, fn, value) {\r\n        if (!config.useDeprecatedSynchronousErrorHandling) {\r\n            throw new Error('bad call');\r\n        }\r\n        try {\r\n            fn.call(this._context, value);\r\n        }\r\n        catch (err) {\r\n            if (config.useDeprecatedSynchronousErrorHandling) {\r\n                parent.syncErrorValue = err;\r\n                parent.syncErrorThrown = true;\r\n                return true;\r\n            }\r\n            else {\r\n                hostReportError(err);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    _unsubscribe() {\r\n        const { _parentSubscriber } = this;\r\n        this._context = null;\r\n        this._parentSubscriber = null;\r\n        _parentSubscriber.unsubscribe();\r\n    }\r\n}\r\n//# sourceMappingURL=Subscriber.js.map"]},"metadata":{},"sourceType":"module"}