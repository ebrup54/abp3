{"ast":null,"code":"import _inherits from \"C:/Users/Nigem/Desktop/source/abp3/angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/Nigem/Desktop/source/abp3/angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"C:/Users/Nigem/Desktop/source/abp3/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/Nigem/Desktop/source/abp3/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { isArray } from '../util/isArray';\nimport { fromArray } from './fromArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function race() {\n  for (var _len = arguments.length, observables = new Array(_len), _key = 0; _key < _len; _key++) {\n    observables[_key] = arguments[_key];\n  }\n\n  if (observables.length === 1) {\n    if (isArray(observables[0])) {\n      observables = observables[0];\n    } else {\n      return observables[0];\n    }\n  }\n\n  return fromArray(observables, undefined).lift(new RaceOperator());\n}\nexport var RaceOperator = /*#__PURE__*/function () {\n  function RaceOperator() {\n    _classCallCheck(this, RaceOperator);\n  }\n\n  _createClass(RaceOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new RaceSubscriber(subscriber));\n    }\n  }]);\n\n  return RaceOperator;\n}();\nexport var RaceSubscriber = /*#__PURE__*/function (_OuterSubscriber) {\n  _inherits(RaceSubscriber, _OuterSubscriber);\n\n  var _super = _createSuper(RaceSubscriber);\n\n  function RaceSubscriber(destination) {\n    var _this;\n\n    _classCallCheck(this, RaceSubscriber);\n\n    _this = _super.call(this, destination);\n    _this.hasFirst = false;\n    _this.observables = [];\n    _this.subscriptions = [];\n    return _this;\n  }\n\n  _createClass(RaceSubscriber, [{\n    key: \"_next\",\n    value: function _next(observable) {\n      this.observables.push(observable);\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      var observables = this.observables;\n      var len = observables.length;\n\n      if (len === 0) {\n        this.destination.complete();\n      } else {\n        for (var i = 0; i < len && !this.hasFirst; i++) {\n          var observable = observables[i];\n          var subscription = subscribeToResult(this, observable, undefined, i);\n\n          if (this.subscriptions) {\n            this.subscriptions.push(subscription);\n          }\n\n          this.add(subscription);\n        }\n\n        this.observables = null;\n      }\n    }\n  }, {\n    key: \"notifyNext\",\n    value: function notifyNext(_outerValue, innerValue, outerIndex) {\n      if (!this.hasFirst) {\n        this.hasFirst = true;\n\n        for (var i = 0; i < this.subscriptions.length; i++) {\n          if (i !== outerIndex) {\n            var subscription = this.subscriptions[i];\n            subscription.unsubscribe();\n            this.remove(subscription);\n          }\n        }\n\n        this.subscriptions = null;\n      }\n\n      this.destination.next(innerValue);\n    }\n  }]);\n\n  return RaceSubscriber;\n}(OuterSubscriber); //# sourceMappingURL=race.js.map","map":{"version":3,"sources":["C:/Users/Nigem/Desktop/source/abp3/angular/node_modules/rxjs/_esm2015/internal/observable/race.js"],"names":["isArray","fromArray","OuterSubscriber","subscribeToResult","race","observables","length","undefined","lift","RaceOperator","subscriber","source","subscribe","RaceSubscriber","destination","hasFirst","subscriptions","observable","push","len","complete","i","subscription","add","_outerValue","innerValue","outerIndex","unsubscribe","remove","next"],"mappings":";;;;AAAA,SAASA,OAAT,QAAwB,iBAAxB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,iBAAT,QAAkC,2BAAlC;AACA,OAAO,SAASC,IAAT,GAA8B;AAAA,oCAAbC,WAAa;AAAbA,IAAAA,WAAa;AAAA;;AACjC,MAAIA,WAAW,CAACC,MAAZ,KAAuB,CAA3B,EAA8B;AAC1B,QAAIN,OAAO,CAACK,WAAW,CAAC,CAAD,CAAZ,CAAX,EAA6B;AACzBA,MAAAA,WAAW,GAAGA,WAAW,CAAC,CAAD,CAAzB;AACH,KAFD,MAGK;AACD,aAAOA,WAAW,CAAC,CAAD,CAAlB;AACH;AACJ;;AACD,SAAOJ,SAAS,CAACI,WAAD,EAAcE,SAAd,CAAT,CAAkCC,IAAlC,CAAuC,IAAIC,YAAJ,EAAvC,CAAP;AACH;AACD,WAAaA,YAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,WACI,cAAKC,UAAL,EAAiBC,MAAjB,EAAyB;AACrB,aAAOA,MAAM,CAACC,SAAP,CAAiB,IAAIC,cAAJ,CAAmBH,UAAnB,CAAjB,CAAP;AACH;AAHL;;AAAA;AAAA;AAKA,WAAaG,cAAb;AAAA;;AAAA;;AACI,0BAAYC,WAAZ,EAAyB;AAAA;;AAAA;;AACrB,8BAAMA,WAAN;AACA,UAAKC,QAAL,GAAgB,KAAhB;AACA,UAAKV,WAAL,GAAmB,EAAnB;AACA,UAAKW,aAAL,GAAqB,EAArB;AAJqB;AAKxB;;AANL;AAAA;AAAA,WAOI,eAAMC,UAAN,EAAkB;AACd,WAAKZ,WAAL,CAAiBa,IAAjB,CAAsBD,UAAtB;AACH;AATL;AAAA;AAAA,WAUI,qBAAY;AACR,UAAMZ,WAAW,GAAG,KAAKA,WAAzB;AACA,UAAMc,GAAG,GAAGd,WAAW,CAACC,MAAxB;;AACA,UAAIa,GAAG,KAAK,CAAZ,EAAe;AACX,aAAKL,WAAL,CAAiBM,QAAjB;AACH,OAFD,MAGK;AACD,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAAJ,IAAW,CAAC,KAAKJ,QAAjC,EAA2CM,CAAC,EAA5C,EAAgD;AAC5C,cAAMJ,UAAU,GAAGZ,WAAW,CAACgB,CAAD,CAA9B;AACA,cAAMC,YAAY,GAAGnB,iBAAiB,CAAC,IAAD,EAAOc,UAAP,EAAmBV,SAAnB,EAA8Bc,CAA9B,CAAtC;;AACA,cAAI,KAAKL,aAAT,EAAwB;AACpB,iBAAKA,aAAL,CAAmBE,IAAnB,CAAwBI,YAAxB;AACH;;AACD,eAAKC,GAAL,CAASD,YAAT;AACH;;AACD,aAAKjB,WAAL,GAAmB,IAAnB;AACH;AACJ;AA3BL;AAAA;AAAA,WA4BI,oBAAWmB,WAAX,EAAwBC,UAAxB,EAAoCC,UAApC,EAAgD;AAC5C,UAAI,CAAC,KAAKX,QAAV,EAAoB;AAChB,aAAKA,QAAL,GAAgB,IAAhB;;AACA,aAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKL,aAAL,CAAmBV,MAAvC,EAA+Ce,CAAC,EAAhD,EAAoD;AAChD,cAAIA,CAAC,KAAKK,UAAV,EAAsB;AAClB,gBAAIJ,YAAY,GAAG,KAAKN,aAAL,CAAmBK,CAAnB,CAAnB;AACAC,YAAAA,YAAY,CAACK,WAAb;AACA,iBAAKC,MAAL,CAAYN,YAAZ;AACH;AACJ;;AACD,aAAKN,aAAL,GAAqB,IAArB;AACH;;AACD,WAAKF,WAAL,CAAiBe,IAAjB,CAAsBJ,UAAtB;AACH;AAzCL;;AAAA;AAAA,EAAoCvB,eAApC,E,CA2CA","sourcesContent":["import { isArray } from '../util/isArray';\r\nimport { fromArray } from './fromArray';\r\nimport { OuterSubscriber } from '../OuterSubscriber';\r\nimport { subscribeToResult } from '../util/subscribeToResult';\r\nexport function race(...observables) {\r\n    if (observables.length === 1) {\r\n        if (isArray(observables[0])) {\r\n            observables = observables[0];\r\n        }\r\n        else {\r\n            return observables[0];\r\n        }\r\n    }\r\n    return fromArray(observables, undefined).lift(new RaceOperator());\r\n}\r\nexport class RaceOperator {\r\n    call(subscriber, source) {\r\n        return source.subscribe(new RaceSubscriber(subscriber));\r\n    }\r\n}\r\nexport class RaceSubscriber extends OuterSubscriber {\r\n    constructor(destination) {\r\n        super(destination);\r\n        this.hasFirst = false;\r\n        this.observables = [];\r\n        this.subscriptions = [];\r\n    }\r\n    _next(observable) {\r\n        this.observables.push(observable);\r\n    }\r\n    _complete() {\r\n        const observables = this.observables;\r\n        const len = observables.length;\r\n        if (len === 0) {\r\n            this.destination.complete();\r\n        }\r\n        else {\r\n            for (let i = 0; i < len && !this.hasFirst; i++) {\r\n                const observable = observables[i];\r\n                const subscription = subscribeToResult(this, observable, undefined, i);\r\n                if (this.subscriptions) {\r\n                    this.subscriptions.push(subscription);\r\n                }\r\n                this.add(subscription);\r\n            }\r\n            this.observables = null;\r\n        }\r\n    }\r\n    notifyNext(_outerValue, innerValue, outerIndex) {\r\n        if (!this.hasFirst) {\r\n            this.hasFirst = true;\r\n            for (let i = 0; i < this.subscriptions.length; i++) {\r\n                if (i !== outerIndex) {\r\n                    let subscription = this.subscriptions[i];\r\n                    subscription.unsubscribe();\r\n                    this.remove(subscription);\r\n                }\r\n            }\r\n            this.subscriptions = null;\r\n        }\r\n        this.destination.next(innerValue);\r\n    }\r\n}\r\n//# sourceMappingURL=race.js.map"]},"metadata":{},"sourceType":"module"}